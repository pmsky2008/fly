// +----------------------------------------------------------------------
// | Fly:php-cli
// +----------------------------------------------------------------------
// | Copyright (c) 2014 xuyuan All rights reserved.
// +----------------------------------------------------------------------
// | Author: xuyuan
// +----------------------------------------------------------------------
FLY:PHP命令行执行框架
目的：构建灵活，高效，敏捷的CLI应用
==========================================================

windows下生成的.bat文件，执行的时候需要能带参数传入。


2015/1/8 22:42----------------------------------------------------------
增加了FlyImage对图片的各种剪裁处理。还需要优化。

扩展的定义还要规则化，严格，简单，稳定
重复定义本来就不许，不要这个参数了。
核心模板分两级，内核，功能，
核心模板启动时就加载了，特别是内核的，应用自然是不能定义了
后续的模板加载可以先看用户的，再看系统的。同时定义几个时，用户自然是想用
自己的，这也方便内核模块不改变的情况进行重写。

再就是看模块加载方式还能不能更简化，正式。

用户的扩展模块需要对函数，配置的使用更友善。


2015/1/7 ----------------------------------------------------------
主要是对已有核心，模板功能进行强化，稳定。行成一套非常灵活，高效的操作手法
使代码，文档，结构更加专业化，改掉那些太随意的部分

让一些操作更加自动化：函数，配置文件的自动生成，帮助代码的显示

对于简单的单方法操作基本上没什么问题了，
主要还是文件的引入方面：
扩展的那套机制还要多检查，包括新增模块
包括共公文件的取出，生成，查看，要更灵活一点
比如Fly::loadPub();在其中检查后，引入，不要file_get_contents()了，这还要另外看文件是否存在。

还有类似自动化采集的模块，那要有很多外部依赖的模块，要能方便的编写，

还得增加更多的实用的模块扩展，

核心模块，看能否，完全区别外其它模块，更加系统级，
有些模块只是功能重要，但不是必备的，不是系统级，
框架启动，运行必需的，要进一步封装，
如文件生成，命令行应用，异常处理，日志记录
做到，一个入口，一个必备，一个功能，一个说明
---------------------------------------------------------------











不要一遇到问题，就去改源码，这样会导致不停的更新同步，易出错
暂时用自己的方式将其解决，
直接将源码修改，也不将其做为新版本， 
把问题现象，及解决方法描述下来，当有很多问题时，一起升级解决
这时，那些有改过源码的，低版本怎么办？
如果可以放弃就放弃了，如果价值不高就这样得了，50% 如test
如有需要高版本确实也很好了，就花时间升级，当值得升级就升级

如时间方便，就升级一些小修改，
如时间不允许，就在专门的时候，升级一次小版本，
当功能达到一定程度时，升级一次大版本，
这些并不影响去不去使用，每次新的使用，用最新的或最稳定的，并标记版本号
这些也都是实际使用过程中总结出来的，但是它们属于多次使用实例





版本控制：
大版本-小版本-小修改
大版本：调用方式有变动，具有系统本质性变动，或大的功能更新，
小片本：调用方式不变，无本质变化，只功能升级和优化，小功能添加
小修改：调用方式不变，无本质变化，小的设置上的变化

一个新的大版本，无需向后兼容，
小版本一定要向后兼容，当有本质变化时，考虑升级大版本
小修改一定是向后兼容的，

不要有一点改一点，太累了，版本不停的更新，有太动地方要跟随
累积到一定量之后，一起改,按时间算吧，
程序都是我自已用，版本多了，实在不好处理


